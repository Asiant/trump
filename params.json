{"name":"Trump","tagline":"Persistent Objectification of Indexed Data","body":"Trump is a framework for objectifying data, with the goal of centralizing the responsibility of \r\nmanaging feeds, munging, calculating and checking data, upstream of any application or user requirement.\r\n\r\nInside the Trump framework, a symbol refers to one or more data feeds, each with their own instructions\r\nsaved for retrieving data.  Once it's retrieved by Trump, depending on the attributes of the symbol,\r\nit gets munged, aggregated, checked, and cached.  Downstream users are free to query the existing cache,\r\nforce a re-cache, or check any property of the data prior to using it.\r\n \r\nSystem Admins can systematically detect problems in advance, via common integrity checks of the data,\r\nthen optionally schedule the re-cache by tag or symbol name.  Users and admins have the ability to manually\r\noverride problems if they exist, with a specific feed, in a way that is centralized, audited, and backed-up.\r\n\r\nWith a focus on business processes, Trump's long run goals enable data feeds to be:\r\n\r\n* **Prioritized**, _flexibly_ - a symbol can be associated with multiple data source for a variety of reasons including redundancy, calculations, or optionality.\r\n* **Modified**, _reliably_ - a symbol's data feeds can be changed out, without any changes requiring testing to the downstream application or user.\r\n* **Verified**, _systematically_ - a variety of common data processing checks are performed as the symbol's data is cached.\r\n* **Audited**, _quickly_ - alerts and reports all become possible to assess integrity or inspect where manual over-rides have been performed.\r\n* **Aggregated**, _intelligently_ - on a symbol by symbol basis, feeds can be combined and used in an extensible number of ways.\r\n* **Customized**, _dynamically_ - extensibility is possible at the templating, munging, aggregation, and validity steps.\r\n## Current State\r\nTrump is currently in the planning stage.  Input is welcome, and the API is subject to change.  This page will be updated with a changelog as soon as the planning stage ends.\r\n\r\n## Basic Usage\r\nThis example dramatically understates the utility of Trump's long term feature set.\r\n\r\n#### Adding a Symbol\r\n```python\r\nfrom trump.orm import SymbolManager\r\nfrom trump.templating import fQuandl, fSQL\r\n\r\nsm = SymbolManager()\r\n\r\noil = sm.create(name = \"oil_front_month\",\r\n                description = \"Crude Oil\",\r\n                freq = 'D',\r\n                units = '$ / barrel')\r\n\r\noil.addTags(['commodity','oil','futures'])\r\n\r\nf1 = fQuandl(r\"CHRIS/CME_CL2\",fieldname='Settle')\r\nf2 = fSQL(\"SELECT date,data FROM test_oil_data;\")\r\n\r\noil.addFeed(f1)\r\noil.addFeed(f2)\r\n\r\noil.cache()\r\n\r\nprint oil.df.tail()\r\n```\r\n#### Using a Symbol\r\n```python\r\nfrom trump.orm import SymbolManager\r\n\r\nsm = SymbolManager()\r\n\r\noil = sm.get(\"oil_front_month\")\r\n\r\n#optional\r\noil.cache()\r\n\r\nprint oil.df.tail()\r\n```\r\n## More Information\r\n\r\nCheckout the main repo's README [main repo's README](https://github.com/Equitable/trump/blob/master/README.rst) for up to date information surrounding planning, installation, and more.","google":"UA-60795615-1","note":"Don't delete this file! It's used internally to help with page regeneration."}